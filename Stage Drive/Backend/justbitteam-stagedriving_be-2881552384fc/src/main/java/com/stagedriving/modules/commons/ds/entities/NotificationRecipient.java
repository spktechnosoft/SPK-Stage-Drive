package com.stagedriving.modules.commons.ds.entities;
// Generated 12-giu-2020 14.48.36 by Hibernate Tools 3.4.0.CR1


import com.justbit.commons.TokenUtils;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.persistence.Cacheable;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EntityListeners;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.PrePersist;
import javax.persistence.PreUpdate;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;
import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;

/**
 * NotificationRecipient generated by hbm
 */
@Entity
@EntityListeners(value={
NotificationRecipient.LastUpdateListener.class,
NotificationRecipient.UidListener.class
})
@Cacheable
@Cache(usage=CacheConcurrencyStrategy.TRANSACTIONAL, region="NotificationRecipient")
@NamedQueries({
@NamedQuery(name = "NotificationRecipient.findAll", query = "SELECT n FROM NotificationRecipient n"),
@NamedQuery(name = "NotificationRecipient.findByNotification", query = "SELECT n FROM NotificationRecipient n WHERE n.notification = :notification"),
@NamedQuery(name = "NotificationRecipient.findByUid", query = "SELECT n FROM NotificationRecipient n WHERE n.uid = :uid"),
@NamedQuery(name = "NotificationRecipient.findByDest", query = "SELECT n FROM NotificationRecipient n WHERE n.dest = :dest"),
@NamedQuery(name = "NotificationRecipient.findByClickedAt", query = "SELECT n FROM NotificationRecipient n WHERE n.clickedAt = :clickedAt"),
@NamedQuery(name = "NotificationRecipient.findByReadAt", query = "SELECT n FROM NotificationRecipient n WHERE n.readAt = :readAt"),
@NamedQuery(name = "NotificationRecipient.findByCreated", query = "SELECT n FROM NotificationRecipient n WHERE n.created = :created"),
@NamedQuery(name = "NotificationRecipient.findByModified", query = "SELECT n FROM NotificationRecipient n WHERE n.modified = :modified"),
@NamedQuery(name = "NotificationRecipient.findByStatus", query = "SELECT n FROM NotificationRecipient n WHERE n.status = :status"),
@NamedQuery(name = "NotificationRecipient.findByStatusDescription", query = "SELECT n FROM NotificationRecipient n WHERE n.statusDescription = :statusDescription"),
@NamedQuery(name = "NotificationRecipient.findByType", query = "SELECT n FROM NotificationRecipient n WHERE n.type = :type"),
@NamedQuery(name = "NotificationRecipient.findByAccountId", query = "SELECT n FROM NotificationRecipient n WHERE n.accountId = :accountId"),
@NamedQuery(name = "NotificationRecipient.findByExtId", query = "SELECT n FROM NotificationRecipient n WHERE n.extId = :extId"),
@NamedQuery(name = "NotificationRecipient.findByOs", query = "SELECT n FROM NotificationRecipient n WHERE n.os = :os"),
})
@Table(name="notification_recipient"
/*
    ,catalog="stgdrv_2"
*/
    , uniqueConstraints = {@UniqueConstraint(columnNames="uid"), @UniqueConstraint(columnNames="ext_id")} 
)
public class NotificationRecipient  implements java.io.Serializable {


    public class NamedQueries {
        public static final String FINDBYID = "NotificationRecipient.findById";
        public static final String FINDBYNOTIFICATION = "NotificationRecipient.findByNotification";
        public static final String FINDBYUID = "NotificationRecipient.findByUid";
        public static final String FINDBYDEST = "NotificationRecipient.findByDest";
        public static final String FINDBYCLICKEDAT = "NotificationRecipient.findByClickedAt";
        public static final String FINDBYREADAT = "NotificationRecipient.findByReadAt";
        public static final String FINDBYCREATED = "NotificationRecipient.findByCreated";
        public static final String FINDBYMODIFIED = "NotificationRecipient.findByModified";
        public static final String FINDBYSTATUS = "NotificationRecipient.findByStatus";
        public static final String FINDBYSTATUSDESCRIPTION = "NotificationRecipient.findByStatusDescription";
        public static final String FINDBYTYPE = "NotificationRecipient.findByType";
        public static final String FINDBYACCOUNTID = "NotificationRecipient.findByAccountId";
        public static final String FINDBYEXTID = "NotificationRecipient.findByExtId";
        public static final String FINDBYOS = "NotificationRecipient.findByOs";
    }




     private Integer id;
     private Notification notification;
     private String uid;
     private String dest;
     private Date clickedAt;
     private Date readAt;
     private Date created;
     private Date modified;
     private String status;
     private String statusDescription;
     private String type;
     private Integer accountId;
     private String extId;
     private String os;

    public NotificationRecipient() {


        //

        //

        //
        //this.setUid(TokenUtils.generateUid());
        //

        //

        //

        //
        this.setCreated(new Date());
        this.setModified(new Date());

        //

        //

        //

        //

        //

        //

        //

        //

    }

	
    public NotificationRecipient(Notification notification, String uid, String dest, String type) {
        this.notification = notification;
        this.uid = uid;
        this.dest = dest;
        this.type = type;
    }
    public NotificationRecipient(Notification notification, String uid, String dest, Date clickedAt, Date readAt, Date created, Date modified, String status, String statusDescription, String type, Integer accountId, String extId, String os) {
       this.notification = notification;
       this.uid = uid;
       this.dest = dest;
       this.clickedAt = clickedAt;
       this.readAt = readAt;
       this.created = created;
       this.modified = modified;
       this.status = status;
       this.statusDescription = statusDescription;
       this.type = type;
       this.accountId = accountId;
       this.extId = extId;
       this.os = os;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)
    
    @Column(name="id", unique=true, nullable=false)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="notification_id", nullable=false)
    public Notification getNotification() {
        return this.notification;
    }
    
    public void setNotification(Notification notification) {
        this.notification = notification;
    }
    
    @Column(name="uid", unique=true, nullable=false, length=100)
    public String getUid() {
        return this.uid;
    }
    
    public void setUid(String uid) {
        this.uid = uid;
    }
    
    @Column(name="dest", nullable=false)
    public String getDest() {
        return this.dest;
    }
    
    public void setDest(String dest) {
        this.dest = dest;
    }
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="clicked_at", length=0)
    public Date getClickedAt() {
        return this.clickedAt;
    }
    
    public void setClickedAt(Date clickedAt) {
        this.clickedAt = clickedAt;
    }
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="read_at", length=0)
    public Date getReadAt() {
        return this.readAt;
    }
    
    public void setReadAt(Date readAt) {
        this.readAt = readAt;
    }
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="created", length=0)
    public Date getCreated() {
        return this.created;
    }
    
    public void setCreated(Date created) {
        this.created = created;
    }
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="modified", length=0)
    public Date getModified() {
        return this.modified;
    }
    
    public void setModified(Date modified) {
        this.modified = modified;
    }
    
    @Column(name="status", length=15)
    public String getStatus() {
        return this.status;
    }
    
    public void setStatus(String status) {
        this.status = status;
    }
    
    @Column(name="status_description")
    public String getStatusDescription() {
        return this.statusDescription;
    }
    
    public void setStatusDescription(String statusDescription) {
        this.statusDescription = statusDescription;
    }
    
    @Column(name="type", nullable=false, length=15)
    public String getType() {
        return this.type;
    }
    
    public void setType(String type) {
        this.type = type;
    }
    
    @Column(name="account_id")
    public Integer getAccountId() {
        return this.accountId;
    }
    
    public void setAccountId(Integer accountId) {
        this.accountId = accountId;
    }
    
    @Column(name="ext_id", unique=true, length=100)
    public String getExtId() {
        return this.extId;
    }
    
    public void setExtId(String extId) {
        this.extId = extId;
    }
    
    @Column(name="os", length=15)
    public String getOs() {
        return this.os;
    }
    
    public void setOs(String os) {
        this.os = os;
    }




    public class UidListener {
        /**
         * automatic property set before any database persistence
         */
        @PreUpdate
        @PrePersist
        public void setUid(NotificationRecipient o) {
            if (o.getUid() == null) {
                o.setUid(TokenUtils.generateUid());
            }
        }
    }

    public class LastUpdateListener {
        /**
         * automatic property set before any database persistence
         */
        @PreUpdate
        @PrePersist
        public void setModified(NotificationRecipient o) {
            if (o.getCreated() == null) {
                o.setCreated(new Date());
            }
            o.setModified(new Date());
        }
    }
}
