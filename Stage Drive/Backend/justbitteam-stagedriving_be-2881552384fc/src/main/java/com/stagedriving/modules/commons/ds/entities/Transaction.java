package com.stagedriving.modules.commons.ds.entities;
// Generated 12-giu-2020 14.48.36 by Hibernate Tools 3.4.0.CR1


import com.justbit.commons.TokenUtils;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.persistence.Cacheable;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EntityListeners;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.PrePersist;
import javax.persistence.PreUpdate;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;
import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;

/**
 * Transaction generated by hbm
 */
@Entity
@EntityListeners(value={
Transaction.LastUpdateListener.class,
Transaction.UidListener.class
})
@Cacheable
@Cache(usage=CacheConcurrencyStrategy.TRANSACTIONAL, region="Transaction")
@NamedQueries({
@NamedQuery(name = "Transaction.findAll", query = "SELECT n FROM Transaction n"),
@NamedQuery(name = "Transaction.findByUid", query = "SELECT n FROM Transaction n WHERE n.uid = :uid"),
@NamedQuery(name = "Transaction.findByStatus", query = "SELECT n FROM Transaction n WHERE n.status = :status"),
@NamedQuery(name = "Transaction.findByVisible", query = "SELECT n FROM Transaction n WHERE n.visible = :visible"),
@NamedQuery(name = "Transaction.findByCreated", query = "SELECT n FROM Transaction n WHERE n.created = :created"),
@NamedQuery(name = "Transaction.findByModified", query = "SELECT n FROM Transaction n WHERE n.modified = :modified"),
@NamedQuery(name = "Transaction.findByAccountIdFrom", query = "SELECT n FROM Transaction n WHERE n.accountIdFrom = :accountIdFrom"),
@NamedQuery(name = "Transaction.findByAccountIdTo", query = "SELECT n FROM Transaction n WHERE n.accountIdTo = :accountIdTo"),
@NamedQuery(name = "Transaction.findByRideId", query = "SELECT n FROM Transaction n WHERE n.rideId = :rideId"),
@NamedQuery(name = "Transaction.findByEventId", query = "SELECT n FROM Transaction n WHERE n.eventId = :eventId"),
@NamedQuery(name = "Transaction.findByProvider", query = "SELECT n FROM Transaction n WHERE n.provider = :provider"),
@NamedQuery(name = "Transaction.findByProviderToken", query = "SELECT n FROM Transaction n WHERE n.providerToken = :providerToken"),
@NamedQuery(name = "Transaction.findByProviderId", query = "SELECT n FROM Transaction n WHERE n.providerId = :providerId"),
@NamedQuery(name = "Transaction.findByProviderFee", query = "SELECT n FROM Transaction n WHERE n.providerFee = :providerFee"),
@NamedQuery(name = "Transaction.findByAmount", query = "SELECT n FROM Transaction n WHERE n.amount = :amount"),
@NamedQuery(name = "Transaction.findByCurrency", query = "SELECT n FROM Transaction n WHERE n.currency = :currency"),
@NamedQuery(name = "Transaction.findByFee", query = "SELECT n FROM Transaction n WHERE n.fee = :fee"),
@NamedQuery(name = "Transaction.findByTotalAmount", query = "SELECT n FROM Transaction n WHERE n.totalAmount = :totalAmount"),
@NamedQuery(name = "Transaction.findByRefundedAmount", query = "SELECT n FROM Transaction n WHERE n.refundedAmount = :refundedAmount"),
@NamedQuery(name = "Transaction.findByPayedAt", query = "SELECT n FROM Transaction n WHERE n.payedAt = :payedAt"),
@NamedQuery(name = "Transaction.findByRefundedAt", query = "SELECT n FROM Transaction n WHERE n.refundedAt = :refundedAt"),
@NamedQuery(name = "Transaction.findByStatusMessage", query = "SELECT n FROM Transaction n WHERE n.statusMessage = :statusMessage"),
})
@Table(name="transaction"
/*
    ,catalog="stgdrv_2"
*/
    , uniqueConstraints = @UniqueConstraint(columnNames="uid") 
)
public class Transaction  implements java.io.Serializable {


    public class NamedQueries {
        public static final String FINDBYID = "Transaction.findById";
        public static final String FINDBYUID = "Transaction.findByUid";
        public static final String FINDBYSTATUS = "Transaction.findByStatus";
        public static final String FINDBYVISIBLE = "Transaction.findByVisible";
        public static final String FINDBYCREATED = "Transaction.findByCreated";
        public static final String FINDBYMODIFIED = "Transaction.findByModified";
        public static final String FINDBYACCOUNTIDFROM = "Transaction.findByAccountIdFrom";
        public static final String FINDBYACCOUNTIDTO = "Transaction.findByAccountIdTo";
        public static final String FINDBYRIDEID = "Transaction.findByRideId";
        public static final String FINDBYEVENTID = "Transaction.findByEventId";
        public static final String FINDBYPROVIDER = "Transaction.findByProvider";
        public static final String FINDBYPROVIDERTOKEN = "Transaction.findByProviderToken";
        public static final String FINDBYPROVIDERID = "Transaction.findByProviderId";
        public static final String FINDBYPROVIDERFEE = "Transaction.findByProviderFee";
        public static final String FINDBYAMOUNT = "Transaction.findByAmount";
        public static final String FINDBYCURRENCY = "Transaction.findByCurrency";
        public static final String FINDBYFEE = "Transaction.findByFee";
        public static final String FINDBYTOTALAMOUNT = "Transaction.findByTotalAmount";
        public static final String FINDBYREFUNDEDAMOUNT = "Transaction.findByRefundedAmount";
        public static final String FINDBYPAYEDAT = "Transaction.findByPayedAt";
        public static final String FINDBYREFUNDEDAT = "Transaction.findByRefundedAt";
        public static final String FINDBYSTATUSMESSAGE = "Transaction.findByStatusMessage";
    }




     private Integer id;
     private String uid;
     private String status;
     private Boolean visible;
     private Date created;
     private Date modified;
     private Integer accountIdFrom;
     private Integer accountIdTo;
     private Integer rideId;
     private Integer eventId;
     private String provider;
     private String providerToken;
     private String providerId;
     private Double providerFee;
     private Double amount;
     private String currency;
     private Double fee;
     private Double totalAmount;
     private Double refundedAmount;
     private Date payedAt;
     private Date refundedAt;
     private String statusMessage;

    public Transaction() {


        //

        //
        //this.setUid(TokenUtils.generateUid());
        //

        //

        //
        this.setCreated(new Date());
        this.setModified(new Date());

        //

        //

        //

        //

        //

        //

        //

        //

        //

        //

        //

        //

        //

        //

        //

        //

        //

        //

    }

	
    public Transaction(String uid, String status, Date created, Date modified) {
        this.uid = uid;
        this.status = status;
        this.created = created;
        this.modified = modified;
    }
    public Transaction(String uid, String status, Boolean visible, Date created, Date modified, Integer accountIdFrom, Integer accountIdTo, Integer rideId, Integer eventId, String provider, String providerToken, String providerId, Double providerFee, Double amount, String currency, Double fee, Double totalAmount, Double refundedAmount, Date payedAt, Date refundedAt, String statusMessage) {
       this.uid = uid;
       this.status = status;
       this.visible = visible;
       this.created = created;
       this.modified = modified;
       this.accountIdFrom = accountIdFrom;
       this.accountIdTo = accountIdTo;
       this.rideId = rideId;
       this.eventId = eventId;
       this.provider = provider;
       this.providerToken = providerToken;
       this.providerId = providerId;
       this.providerFee = providerFee;
       this.amount = amount;
       this.currency = currency;
       this.fee = fee;
       this.totalAmount = totalAmount;
       this.refundedAmount = refundedAmount;
       this.payedAt = payedAt;
       this.refundedAt = refundedAt;
       this.statusMessage = statusMessage;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)
    
    @Column(name="id", unique=true, nullable=false)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }
    
    @Column(name="uid", unique=true, nullable=false)
    public String getUid() {
        return this.uid;
    }
    
    public void setUid(String uid) {
        this.uid = uid;
    }
    
    @Column(name="status", nullable=false, length=45)
    public String getStatus() {
        return this.status;
    }
    
    public void setStatus(String status) {
        this.status = status;
    }
    
    @Column(name="visible")
    public Boolean getVisible() {
        return this.visible;
    }
    
    public void setVisible(Boolean visible) {
        this.visible = visible;
    }
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="created", nullable=false, length=0)
    public Date getCreated() {
        return this.created;
    }
    
    public void setCreated(Date created) {
        this.created = created;
    }
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="modified", nullable=false, length=0)
    public Date getModified() {
        return this.modified;
    }
    
    public void setModified(Date modified) {
        this.modified = modified;
    }
    
    @Column(name="account_id_from")
    public Integer getAccountIdFrom() {
        return this.accountIdFrom;
    }
    
    public void setAccountIdFrom(Integer accountIdFrom) {
        this.accountIdFrom = accountIdFrom;
    }
    
    @Column(name="account_id_to")
    public Integer getAccountIdTo() {
        return this.accountIdTo;
    }
    
    public void setAccountIdTo(Integer accountIdTo) {
        this.accountIdTo = accountIdTo;
    }
    
    @Column(name="ride_id")
    public Integer getRideId() {
        return this.rideId;
    }
    
    public void setRideId(Integer rideId) {
        this.rideId = rideId;
    }
    
    @Column(name="event_id")
    public Integer getEventId() {
        return this.eventId;
    }
    
    public void setEventId(Integer eventId) {
        this.eventId = eventId;
    }
    
    @Column(name="provider", length=45)
    public String getProvider() {
        return this.provider;
    }
    
    public void setProvider(String provider) {
        this.provider = provider;
    }
    
    @Column(name="provider_token")
    public String getProviderToken() {
        return this.providerToken;
    }
    
    public void setProviderToken(String providerToken) {
        this.providerToken = providerToken;
    }
    
    @Column(name="provider_id")
    public String getProviderId() {
        return this.providerId;
    }
    
    public void setProviderId(String providerId) {
        this.providerId = providerId;
    }
    
    @Column(name="provider_fee", precision=22, scale=0)
    public Double getProviderFee() {
        return this.providerFee;
    }
    
    public void setProviderFee(Double providerFee) {
        this.providerFee = providerFee;
    }
    
    @Column(name="amount", precision=22, scale=0)
    public Double getAmount() {
        return this.amount;
    }
    
    public void setAmount(Double amount) {
        this.amount = amount;
    }
    
    @Column(name="currency", length=15)
    public String getCurrency() {
        return this.currency;
    }
    
    public void setCurrency(String currency) {
        this.currency = currency;
    }
    
    @Column(name="fee", precision=22, scale=0)
    public Double getFee() {
        return this.fee;
    }
    
    public void setFee(Double fee) {
        this.fee = fee;
    }
    
    @Column(name="total_amount", precision=22, scale=0)
    public Double getTotalAmount() {
        return this.totalAmount;
    }
    
    public void setTotalAmount(Double totalAmount) {
        this.totalAmount = totalAmount;
    }
    
    @Column(name="refunded_amount", precision=22, scale=0)
    public Double getRefundedAmount() {
        return this.refundedAmount;
    }
    
    public void setRefundedAmount(Double refundedAmount) {
        this.refundedAmount = refundedAmount;
    }
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="payed_at", length=0)
    public Date getPayedAt() {
        return this.payedAt;
    }
    
    public void setPayedAt(Date payedAt) {
        this.payedAt = payedAt;
    }
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="refunded_at", length=0)
    public Date getRefundedAt() {
        return this.refundedAt;
    }
    
    public void setRefundedAt(Date refundedAt) {
        this.refundedAt = refundedAt;
    }
    
    @Column(name="status_message", length=65535)
    public String getStatusMessage() {
        return this.statusMessage;
    }
    
    public void setStatusMessage(String statusMessage) {
        this.statusMessage = statusMessage;
    }




    public class UidListener {
        /**
         * automatic property set before any database persistence
         */
        @PreUpdate
        @PrePersist
        public void setUid(Transaction o) {
            if (o.getUid() == null) {
                o.setUid(TokenUtils.generateUid());
            }
        }
    }

    public class LastUpdateListener {
        /**
         * automatic property set before any database persistence
         */
        @PreUpdate
        @PrePersist
        public void setModified(Transaction o) {
            if (o.getCreated() == null) {
                o.setCreated(new Date());
            }
            o.setModified(new Date());
        }
    }
}
